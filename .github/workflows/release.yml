name: Release

on:
  push:
    tags:
    - v*

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh
          server-username: MAVEN_NEXUS_USER
          server-password: MAVEN_NEXUS_PASSWORD
      - name: Run tests and build jar
        run: mvn install
      - name: Copy GPG Private key
        run: echo "${{ secrets.gpg_private_key }}" > private-key.txt && gpg --import --no-tty --batch --yes private-key.txt
      - name: Deploy to Maven Central respository
        env:
          MAVEN_NEXUS_USER: ${{ secrets.nexus_username }}
          MAVEN_NEXUS_PASSWORD: ${{ secrets.nexus_password }}
        run: mvn clean deploy -Dgpg.passphrase=${{ secrets.gpg_passphrase }} -DskipTests -P deploy
      - name: Deploy to Github Package Registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir ~/.m2 || true
          echo "<settings><servers><server><id>github</id><username>OWNER</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
          mvn deploy
      # - name: Deploy to Github Package Registry
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  run: |
      #    jar=`ls target/*.jar | grep -v dependencies`
      #    mvn -DskipTests deploy:deploy-file -DrepositoryId=github -Dfile=$jar -Durl=https://maven.pkg.github.com/robvanderleek/JLifx -DpomFile=pom.xml
